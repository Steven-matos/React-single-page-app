{"ast":null,"code":"import _classCallCheck from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/steven/Documents/GitHub/react-app-v2/src/components/Stopwatch.js\";\nimport React, { Component } from 'react';\n\nvar Stopwatch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stopwatch, _Component);\n\n  function Stopwatch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Stopwatch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Stopwatch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isRunning: false\n    };\n\n    _this.tick = function () {};\n\n    _this.handleStopwatch = function () {\n      _this.setState({\n        isRunning: !_this.state.isRunning\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Stopwatch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.intervalID = setInterval(function () {\n        return _this2.tick();\n      }, 100);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"stopwatch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Stopwatch\"), React.createElement(\"span\", {\n        className: \"stopwatch-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"button\", {\n        onClick: this.handleStopwatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.isRunning ? 'Stop' : 'Start'), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return Stopwatch;\n}(Component);\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/steven/Documents/GitHub/react-app-v2/src/components/Stopwatch.js"],"names":["React","Component","Stopwatch","state","isRunning","tick","handleStopwatch","setState","intervalID","setInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;UAQRC,I,GAAO,YAAM,CAEZ,C;;UAEDC,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAE,CAAC,MAAKD,KAAL,CAAWC;AADX,OAAd;AAGD,K;;;;;;;wCAZkB;AAAA;;AACjB,WAAKI,UAAL,GAAkBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACJ,IAAL,EAAN;AAAA,OAAD,EAAoB,GAApB,CAA7B;AACD;;;6BAYO;AACN,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC,OADnC,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CADF;AAWD;;;;EAhCqBH,S;;AAsCxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n\n  state = {\n    isRunning: false\n  }\n\n  componentDidMount(){\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  tick = () => {\n\n  }\n\n  handleStopwatch = () => {\n    this.setState({\n      isRunning: !this.state.isRunning\n    });\n  }\n\n  render(){\n    return(\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">0</span>\n        <button onClick={this.handleStopwatch}>\n          {this.state.isRunning ? 'Stop' : 'Start'}\n        </button>\n        <button>Reset</button>\n      </div>\n\n    );\n  }\n}\n\n\n\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}