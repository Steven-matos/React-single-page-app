{"ast":null,"code":"import _classCallCheck from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/steven/Documents/GitHub/react-app-v2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/steven/Documents/GitHub/react-app-v2/src/components/Counter.js\";\nimport React from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Counter, _React$Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      score: 0\n    };\n\n    _this.incrementScore = function () {\n      _this.setState(function (prevState) {\n        return {\n          score: prevState.score + 1\n        };\n      });\n    };\n\n    _this.decrementScore = function () {\n      _this.setState(function (prevState) {\n        return {\n          score: prevState.score - 1\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"counter-action decrement\",\n        onClick: this.decrementScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" - \"), React.createElement(\"span\", {\n        className: \"counter-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.state.score), React.createElement(\"button\", {\n        className: \"counter-action increment\",\n        onClick: this.incrementScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \" + \"));\n    }\n  }]);\n\n  return Counter;\n}(React.Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/steven/Documents/GitHub/react-app-v2/src/components/Counter.js"],"names":["React","Counter","state","score","incrementScore","setState","prevState","decrementScore","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAO;AACLC,MAAAA,KAAK,EAAE;AADF,K;;UAIPC,c,GAAiB,YAAK;AACpB,YAAKC,QAAL,CAAe,UAAAC,SAAS;AAAA,eAAK;AACzBH,UAAAA,KAAK,EAAEG,SAAS,CAACH,KAAV,GAAkB;AADA,SAAL;AAAA,OAAxB;AAGD,K;;UAEDI,c,GAAiB,YAAK;AACpB,YAAKF,QAAL,CAAe,UAAAC,SAAS;AAAA,eAAK;AACzBH,UAAAA,KAAK,EAAEG,SAAS,CAACH,KAAV,GAAkB;AADA,SAAL;AAAA,OAAxB;AAGD,K;;;;;;;6BAEO;AACN,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,KAAKI,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKL,KAAL,CAAWC,KAA7C,CAFF,EAGE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,KAAKC,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD;;;;EAzBmBJ,KAAK,CAACQ,S;;AA4B5B,eAAeP,OAAf","sourcesContent":["import React from 'react';\n\nclass Counter extends React.Component {\n  state= {\n    score: 0\n  }\n\n  incrementScore = () =>{\n    this.setState( prevState => ({\n        score: prevState.score + 1\n    }));\n  }\n\n  decrementScore = () =>{\n    this.setState( prevState => ({\n        score: prevState.score - 1\n    }));\n  }\n\n  render(){\n    return (\n      <div className=\"counter\">\n        <button className=\"counter-action decrement\" onClick={this.decrementScore}> - </button>\n        <span className=\"counter-score\">{ this.state.score }</span>\n        <button className=\"counter-action increment\" onClick={this.incrementScore}> + </button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}